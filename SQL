CREATE DATABASE BankDB
Use [BankDB]
GO

Create table dbo.Bank(
ID int NOT NULL Primary key IDENTITY,
BankName nvarchar(30) NOT NULL
)
go

insert into Bank
values
('Альфа-Банк'),
('Сбербанк'),
('Беларусбанк'),
('Белинвестбанк'),
('МТБанк')
go

Create table dbo.City(
ID int NOT NULL Primary key IDENTITY,
City nvarchar(30) NOT NULL,
)
go

insert into City
values
('Гомель'),
('Минск'),
('Брест'),
('Витебск'),
('Пинск')
go


 Create table dbo.Branch(
ID int NOT NULL Primary key IDENTITY,
BankID int  FOREIGN KEY REFERENCES Bank(ID) ON DELETE CASCADE,
CityID int  FOREIGN KEY REFERENCES City(ID) ON DELETE CASCADE,
BranchNumber nvarchar(40) NOT NULL
)
go

insert into Branch(BankID,CityID,BranchNumber)
values
(1,4,6124),
(2,2,2155),
(3, 1,3211),
(4, 5,8891),
(5, 3,3131),
(1,4, 1123),
(3,1,9999),
(3, 1, 5661),
(5,3,2131),
(4,5,1122),
(3,4,9999),
(3, 5, 5661),
(4,3,2131),
(4,1,1122)

create table dbo.[SocialStatus](
ID int NOT NULL Primary key IDENTITY,
[SocialStatus] nvarchar(80) NOT NULL,
)
go

insert into [SocialStatus]
values
('Безработный'),
('Студент'),
('Работает'),
('Военнообязанный'),
('Инвалид'),
('Холост'),
('Профессор наук'),
('В разводе'),
('Не замужем'),
('Замужем'),
('Пенсионер')
go

Create table dbo.Client(
ID int NOT NULL Primary key IDENTITY,
BankID int FOREIGN KEY REFERENCES Bank(ID) ON DELETE CASCADE,
FullName nvarchar(80) NOT NULL,
DateOfBirth Date NOT NULL Default getdate(),
[Address] nvarchar(80) NOT NULL,
[SocialStatusID] int unique not null,

CONSTRAINT FK_Client foreign key ([SocialStatusID]) references [SocialStatus](ID)
)
go

Insert into Client(BankID, FullName, DateOfBirth, [Address], SocialStatusID)
	values 
	(1,'Иванов Иван Иванович', '1999-08-12', 'Пушкина 14/5',2),
	(2,'Сергеев Антов Александрович', '2000-02-19', 'Дмитриево 43/16',1),
	(3,'Приходько Анастасия Сергеевна', '1985-11-02', 'Катушкино 65/32',3),
	(4,'Зубкин Николай Алексеевич', '1989-03-07', 'Николаево 86/2',4),
	(5,'Колко Ольга Александровна', '1995-01-20', 'Советская 76/77',5),
	(1,'Залан Ержан Артемович', '1987-02-11', 'Круг 65/194',7),
	(4,'Артемов Аретм Александрович', '2003-05-23', 'Демидова 77/18',6),
	(3,'Клыжына Анна Сергеевна', '1981-10-20', 'Катушкино 90/98',8),
	(3,'Круглая Анастассия Алексеевна', '1998-07-07', 'Фрау 11/15',9),
	(5,'Копыто Инга Сергеевна', '2002-02-17', 'Советская 100/77',10),
	(2,'Закревская Полина Ивановна', '1965-05-19', 'Беговая 90/11',11)
 go


Create table dbo.Account(
ID int not null primary key IDENTITY,
ClientId int unique  not null,
AccountNumber int not null,
Balance money,

Constraint FK_Account foreign key(ClientID) references Client(ID)
)
go

insert into Account(ClientId, AccountNumber, Balance)
Values
(1, 11111, 65000),
(2,22222,70000),
(3, 33333, 45000),
(4,44444,default),
(5, 55555, 17000),
(6,66666,Default),
(7, 77777, Default),
(8,88888,33000),
(9, 99999, 85000),
(10,10000,Default)
go

Create table dbo.[Card](
ID int NOT NULL Primary key IDENTITY,
AccountID int FOREIGN KEY REFERENCES Account(ID) ON DELETE CASCADE,
CardNumber int NOT NULL,
OwnerName VARCHAR(30),
Balance money 
)
go

insert into [Card](AccountID,CardNumber,OwnerName,Balance)
values
(1, 11111111, 'Иванов Иван',40000),
(1, 12222222, 'Иванов Иван',25000),
(2, 22222222, 'Антов Александрович',40000),
(3, 33333333, 'Приходько Анастасия',15000),
(3, 31111111, 'Приходько Анастасия',15000),
(3, 32222222, 'Приходько Анастасия',10000),
(5, 55555555, 'Колко Ольга',9000),
(5, 51111111, default,5000),
(6, 66666666, 'Залан Ержан',default),
(7, 77777777, 'Артемов Аретм',default),
(7, 71111111, 'Артемов Аретм',default),
(8, 88888888, 'Клыжына Анна',25000),
(8, 81111111, 'Клыжына Анна',3000),
(9, 99999999, 'Круглая Анастасия',10000),
(9, 91111111, default,35000)
go

 /*1. Покажи мне список банков у которых есть филиалы в городе Витебск */
 
 SELECT BankName,
	BranchNumber
FROM Branch AS Br
JOIN City
	ON City.Id = Br.CityID
JOIN Bank
	ON Bank.Id = Br.BankID
WHERE City IN ('Витебск') 
go
  
  /* 2. Получить список карточек с указанием имени владельца, баланса и названия банка*/

 SELECT OwnerName,
 	[Card].Balance,
 	BankName
FROM Bank
JOIN Client
	ON Bank.Id = Client.BankID
JOIN Account
	ON Client.Id = Account.ClientId
JOIN [card]
	ON Account.Id = [Card].AccountId
go
  
   /*  3. Показать список банковских аккаунтов у которых баланс не совпадает с суммой баланса по карточкам. В отдельной колонке вывести разницу*/
  	-- 1 вариант
	
;with ps AS 
	(SELECT crd.AccountID,
			SUM(crd.Balance) AS cardBalance
	FROM [Card] crd
	GROUP BY  crd.AccountID )
SELECT acc.ID,
	   acc.Balance - ps.cardBalance AS razn
FROM Account acc
JOIN ps
	ON ps.AccountID = acc.ID
WHERE acc.Balance <> ps.cardBalance
go

--2 вариант	
SELECT acc.ID,
	   acc.Balance - ps.cardBalance AS razn
FROM Account acc cross apply 
	(SELECT crd.AccountID,
			SUM(crd.Balance) AS cardBalance
	FROM [Card] crd
	WHERE crd.AccountID = acc.ID
	GROUP BY  crd.AccountID ) ps
WHERE acc.Balance <> ps.cardBalance
go

-- 4. Вывести кол-во банковских карточек для каждого соц статуса (2 реализации, GROUP BY и подзапросом)

--1) Group by

Select 
	 count(crd.ID) [count],
	 s.SocialStatus
from SocialStatus s
	join Client c on c.SocialStatusID = s.ID
	join Account a on a.ClientId = c.ID
	left join [card] crd on crd.AccountId = a.ID
group by 
	s.SocialStatus

-- 2) Подзапросом
SELECT 
	(SELECT count(*)
	FROM [card]
	WHERE acc.Id = [card].AccountID) coun, stat.SocialStatus
FROM SocialStatus stat
Where 
JOIN Client 
	ON stat.Id = client.SocialStatusID
JOIN Account acc
	ON client.Id = acc.ClientId
go
 












